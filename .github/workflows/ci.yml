name: ci
on:
  push:
    branches:
      - master
      - staging
  pull_request: {}
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Fetch everything to be able to find changed images
          fetch-depth: 0
      - run: '.ci/changed-images'
      - id: set-matrix
        run: 'echo "::set-output name=matrix::$(.ci/changed-images --matrix)"'
  build:
    if: github.ref != 'refs/heads/master'
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - id: set-tags
        name: Set tags
        run: echo $(<${{ matrix.image }}/tags) | sed -e 's~[[:space:]][[:space:]]*~%0A~g'
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          version: latest
          install: true
      - uses: docker/build-push-action@v2
        id: docker_build
        with:
          push: false
          tags: ${{ steps.set-tags.outputs.tags }}
          context: ${{ matrix.image }}
          file: ${{ matrix.image }}/Dockerfile
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  build-and-push:
    if: github.ref == 'refs/heads/master'
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v2
      - id: set-tags
        name: Set tags
        run: echo $(<${{ matrix.image }}/tags) | sed -e 's~[[:space:]][[:space:]]*~%0A~g'
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          version: latest
          install: true
      - uses: docker/build-push-action@v2
        id: docker_build
        with:
          push: true
          tags: ${{ steps.set-tags.outputs.tags }}
          context: ${{ matrix.image }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
